extends ../layouts/application.pug

block header 
  h1=t('layouts.application.tasks')
  a.btn.btn-primary(href=route('newTasks'))=t('views.tasks.actions.create')

block content
  .my-5.p-4.card
    +formFor()(action='/tasks' method='GET')
      .row
            +filterSelect(statuses, 'tasks', 'statusId')
            +filterSelect(users, 'tasks', 'executorId')
            +filterSelect(labels, 'tasks', 'label')
      .form-check
        input(class='form-check-input', type='checkbox', value=checked, id='data_isCreatorUser' name='isCreatorUser' checked=query.isCreatorUser)
        label(class='form-check-label', for='data_isCreatorUser')=t('views.tasks.only_my_tasks')
      .row
        .input-group.mt-3
          input(class='btn btn-primary', type='submit' value=t('views.tasks.actions.show'))

  table.bg-white.table.table-striped.mt-5
    thead
      tr
        th= t('views.tasks.id')
        th= t('views.tasks.name')
        th= t('views.tasks.status')
        th= t('views.tasks.author')
        th= t('views.tasks.executor')
        th= t('views.tasks.createdAt')
        th= t('')
    tbody
      - const getDataById = (ownerId, entities) => entities.find(({ id }) => ownerId == id)
      each task in tasks
        tr
          td= task.id
          td
            a.text-break(href=`/tasks/${task.id}`)=task.name
          - const status = getDataById(task.statusId, statuses)
          - const creator = getDataById(task.creatorId, users)
          - const executor = getDataById(task.executorId, users)
          td= status.name
          td= creator.firstName + ' ' + creator.lastName
          if (executor)
            td= executor.firstName + ' ' + executor.lastName
          else 
            td
          td= formatDate(task.createdAt)
          td.d-flex
            a(href=`/tasks/${task.id}/edit` class='btn btn-primary me-1')=t('views.tasks.actions.edit')
            +buttonTo(`/tasks/${task.id}`, 'DELETE')(value=t('views.tasks.actions.delete')).btn.btn-danger